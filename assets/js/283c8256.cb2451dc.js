"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5456],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),f=o,y=m["".concat(u,".").concat(f)]||m[f]||l[f]||i;return t?r.createElement(y,a(a({ref:n},p),{},{components:t})):r.createElement(y,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},33894:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],c={},u="Docusaurus",s={unversionedId:"best-practices/documentation/docusaurus",id:"best-practices/documentation/docusaurus",title:"Docusaurus",description:"AWS Amplifiy for hosting",source:"@site/docs/07-best-practices/documentation/docusaurus.md",sourceDirName:"07-best-practices/documentation",slug:"/best-practices/documentation/docusaurus",permalink:"/ai-kb/docs/best-practices/documentation/docusaurus",editUrl:"https://github.com/sparsh-ai/ai-kb/docs/07-best-practices/documentation/docusaurus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Documentation",permalink:"/ai-kb/docs/best-practices/documentation/"},next:{title:"MkDocs",permalink:"/ai-kb/docs/best-practices/documentation/mkdocs"}},p={},l=[{value:"AWS Amplifiy for hosting",id:"aws-amplifiy-for-hosting",level:2},{value:"CI/CD Cloudformation template",id:"cicd-cloudformation-template",level:3}],m={toc:l};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"docusaurus"},"Docusaurus"),(0,i.kt)("h2",{id:"aws-amplifiy-for-hosting"},"AWS Amplifiy for hosting"),(0,i.kt)("h3",{id:"cicd-cloudformation-template"},"CI/CD Cloudformation template"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="./docs/pipeline.yml"',title:'"./docs/pipeline.yml"'},"AWSTemplateFormatVersion: 2010-09-09\n\nDescription: Stack for AWS Amplify App\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: <your project name>\n  ENV:\n    Type: String\n    Default: <your environment>\n  GithubBranch:\n    Type: String\n    Default: <your branch>\n  GithubOAuthToken:\n    Type: String\n    Default: <your github personal access token>\n    NoEcho: true\n  Repository:\n    Type: String\n    Default: <your github repository>\n    Description: Github Repository URL\n  Domain:\n    Type: String\n    Default: <custom domain, e.g. amplify.recohut.com>\n    Description: Custom Domain Name\n\nResources:\n\n  S3Bucket:\n    Type: 'AWS::S3::Bucket'\n    Properties:\n      BucketName: !Join \n        - '-'\n        - - !Ref ProjectName\n          - !Ref ENV\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n    UpdateReplacePolicy: Retain\n    DeletionPolicy: Retain\n\n  AmplifyRole:\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: amplify.amazonaws.com\n            Action: 'sts:AssumeRole'\n      ManagedPolicyArns:\n        - 'arn:aws:iam::aws:policy/AdministratorAccess'\n\n  AmplifyApp:\n    Type: \"AWS::Amplify::App\"\n    Properties:\n      Name: !Join \n        - '-'\n        - - !Ref ProjectName\n          - !Ref ENV\n      Repository: !Ref Repository\n      Description: \n      OauthToken: !Ref GithubOAuthToken\n      BuildSpec: |-\n        version: 1\n        backend:\n          phases:\n            build:\n              commands:\n                - amplifyPush --simple\n        frontend:\n          phases:\n            preBuild:\n              commands:\n                - yarn install\n            build:\n              commands:\n                - yarn run build\n          artifacts:\n            baseDirectory: build\n            files:\n              - '**/*'\n          cache:\n            paths:\n              - node_modules/**/*\n      # CustomRules:\n      #   - Source: /dist/vue.min.js\n      #     Target: /vue.min.js\n      #     Status: '200'\n      Tags:\n        - Key: Name\n          Value: Value\n      IAMServiceRole: !GetAtt AmplifyRole.Arn\n\n  AmplifyBranch:\n    Type: AWS::Amplify::Branch\n    Properties:\n      BranchName: !Ref GithubBranch\n      AppId: !GetAtt AmplifyApp.AppId\n      Description: Docs\n      EnableAutoBuild: true\n      Tags:\n        - Key: Name\n          Value: jinniai-docs\n        - Key: Branch\n          Value: !Ref GithubBranch\n\n  AmplifyDomain:\n    Type: AWS::Amplify::Domain\n    Properties:\n      DomainName: !Ref Domain\n      AppId: !GetAtt AmplifyApp.AppId\n      SubDomainSettings:\n        - Prefix: !Ref GithubBranch\n          BranchName: !GetAtt AmplifyBranch.BranchName\n\nOutputs:\n  DefaultDomain:\n    Value: !GetAtt AmplifyApp.DefaultDomain\n\n  DocsBranchUrl:\n    Value: !Join [ \".\", [ !GetAtt AmplifyBranch.BranchName, !GetAtt AmplifyDomain.DomainName ]]\n")))}f.isMDXComponent=!0}}]);