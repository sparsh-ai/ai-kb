"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5501],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},60923:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],l={title:"PDF to Wordcloud via Mail",authors:"sparsh"},c=void 0,p={permalink:"/ai-kb/blog/2021/10/01/pdf-to-wordcloud-via-mail",source:"@site/blog/2021-10-01-pdf-to-wordcloud-via-mail.mdx",title:"PDF to Wordcloud via Mail",description:"/img/content-blog-raw-blog-pdf-to-wordcloud-via-mail-untitled.png",date:"2021-10-01T00:00:00.000Z",formattedDate:"October 1, 2021",tags:[],readingTime:1.015,truncated:!1,authors:[{name:"Sparsh Agarwal",title:"Principal Developer",url:"https://github.com/sparsh-ai",imageURL:"https://avatars.githubusercontent.com/u/62965911?v=4",key:"sparsh"}],frontMatter:{title:"PDF to Wordcloud via Mail",authors:"sparsh"},prevItem:{title:"OCR experiments",permalink:"/ai-kb/blog/2021/10/01/ocr-experiments"},nextItem:{title:"Personalized Unexpectedness in  Recommender Systems",permalink:"/ai-kb/blog/2021/10/01/personalized-unexpectedness-in-recommender-systems"}},u={authorsImageUrls:[void 0]},s=[{value:"Objective",id:"objective",level:2},{value:"Process Flow",id:"process-flow",level:2},{value:"Code",id:"code",level:2}],d={toc:s};function m(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-pdf-to-wordcloud-via-mail-untitled.png",src:r(20454).Z,width:"766",height:"525"})),(0,a.kt)("h2",{id:"objective"},"Objective"),(0,a.kt)("p",null,"Integrating PDF, Text, Wordcloud and Email functionalities in Python"),(0,a.kt)("h2",{id:"process-flow"},"Process Flow"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Step 1 - I use PyPDF2 library to read PDF text in Python"),(0,a.kt)("li",{parentName:"ul"},"Step 2 - Import the supporting libraries"),(0,a.kt)("li",{parentName:"ul"},"Step 3 - Count No. of Pages for this pdf and extract text for each page using loop"),(0,a.kt)("li",{parentName:"ul"},"Step 4 - Build Text corpus by simply attaching text of next page to all the previous ones"),(0,a.kt)("li",{parentName:"ul"},"Step 5 - Creating word frequency dataframe by first splitting text into words and counting the frequency of each word"),(0,a.kt)("li",{parentName:"ul"},"Step 6.1 - Pre-process text i.e. removing stopwords (using nltk library), grouping common words."),(0,a.kt)("li",{parentName:"ul"},"Step 6.2 - used regex to extract alphabets only, lower all chracters, and sorting as per decreasing order of frequency."),(0,a.kt)("li",{parentName:"ul"},"Step 7 - Creating Wordcloud using matplotlib and wordcloud libraries"),(0,a.kt)("li",{parentName:"ul"},"Step 8 - Importing required libraries like smtplib, MIME, win32 for sending the mail"),(0,a.kt)("li",{parentName:"ul"},"Step 9 - Create outlook mail object with supporting data like filepath attachment, recepient address, mail body etc."),(0,a.kt)("li",{parentName:"ul"},"Step 10 - Sending the mail with required wordcloud image file attached and checking if mail is received or not!")),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://nbviewer.jupyter.org/gist/sparsh-ai/f1de48fd4fac199bcc95e1d136fbdfd0"},"Notebook on nbviewer")))}m.isMDXComponent=!0},20454:function(e,t,r){t.Z=r.p+"assets/images/content-blog-raw-blog-pdf-to-wordcloud-via-mail-untitled-6d6e64af376a8a5c01c0ed9f1cbe7b35.png"}}]);