"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9234],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return g}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(t),g=r,d=p["".concat(s,".").concat(g)]||p[g]||u[g]||i;return t?a.createElement(d,o(o({ref:n},m),{},{components:t})):a.createElement(d,o({ref:n},m))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},64087:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),o=["components"],l={title:"Vehicle Suggestions",authors:"sparsh",tags:["nlp","similarity","vision"]},s=void 0,c={permalink:"/ai-kb/blog/2021/10/01/vehicle-suggestions",source:"@site/blog/2021-10-01-vehicle-suggestions.mdx",title:"Vehicle Suggestions",description:"/img/content-blog-raw-blog-vehicle-suggestions-untitled.png",date:"2021-10-01T00:00:00.000Z",formattedDate:"October 1, 2021",tags:[{label:"nlp",permalink:"/ai-kb/blog/tags/nlp"},{label:"similarity",permalink:"/ai-kb/blog/tags/similarity"},{label:"vision",permalink:"/ai-kb/blog/tags/vision"}],readingTime:13.92,truncated:!1,authors:[{name:"Sparsh Agarwal",title:"Principal Developer",url:"https://github.com/sparsh-ai",imageURL:"https://avatars.githubusercontent.com/u/62965911?v=4",key:"sparsh"}],frontMatter:{title:"Vehicle Suggestions",authors:"sparsh",tags:["nlp","similarity","vision"]},prevItem:{title:"Tools for building recommender systems",permalink:"/ai-kb/blog/2021/10/01/tools-for-building-recommender-systems"},nextItem:{title:"Web Scraping using Scrapy, BS4, and Selenium",permalink:"/ai-kb/blog/2021/10/01/web-scraping-using-scrapy-bs4-and-selenium"}},m={authorsImageUrls:[void 0]},u=[{value:"Customer queries",id:"customer-queries",level:2},{value:"Public datasets",id:"public-datasets",level:2},{value:"Logical Reasoning",id:"logical-reasoning",level:2},{value:"Scope 1",id:"scope-1",level:3},{value:"Scope 2",id:"scope-2",level:3},{value:"Model framework 1",id:"model-framework-1",level:3},{value:"Model framework 2",id:"model-framework-2",level:3},{value:"Model framework 3",id:"model-framework-3",level:3},{value:"Model framework 4",id:"model-framework-4",level:3},{value:"Model framework 5",id:"model-framework-5",level:3},{value:"Experiment 2",id:"experiment-2",level:2},{value:"Facebook Scraping",id:"facebook-scraping",level:3},{value:"Twitter Scraping",id:"twitter-scraping",level:3},{value:"Dataframe",id:"dataframe",level:3},{value:"Insta Image Grid",id:"insta-image-grid",level:3},{value:"User Text NER",id:"user-text-ner",level:3},{value:"Experiment 3",id:"experiment-3",level:2},{value:"Topic scores",id:"topic-scores",level:3},{value:"JSON rules",id:"json-rules",level:3}],p={toc:u};function g(e){var n=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled.png",src:t(94342).Z,width:"1200",height:"675"})),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The customer owns a franchise store for selling Tesla Automobiles. The objective is to predict user preferences using social media data."),(0,i.kt)("p",null,"Task 1 - Suggest the best vehicle for the given description"),(0,i.kt)("p",null,"Task 2 - Suggest the best vehicle for the given social media id of the user"),(0,i.kt)("h2",{id:"customer-queries"},"Customer queries"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// car or truck or no mention of vehicle type means Cyber Truck\n// SUV mention means Model X\nconst one = "I\'m looking for a fast suv that I can go camping without worrying about recharging".;\nconst two = "cheap red car that is able to go long distances";\nconst three = "i am looking for a daily driver that i can charge everyday, do not need any extras";\nconst four = "i like to go offroading a lot on my jeep and i want to do the same with the truck";\nconst five = "i want the most basic suv possible";\nconst six = "I want all of the addons";\n// mentions of large family or many people means model x\nconst seven = "I have a big family and want to be able to take them around town and run errands without worrying about charging";\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Expected output",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'const oneJson = {\nvehicle: \'Model X\',\ntrim : \'adventure\',\nexteriorColor: \'whiteExterior\',\nwheels: "22Performance",\ntonneau: "powerTonneau",\npackages: "",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "extendedRange",\nsoftware: "",\n}\n\nconst twoJSON = {\nvehicle: \'Cyber Truck\',\ntrim : \'base\',\nexteriorColor: \'whiteExterior\',\nwheels: "21AllSeason",\ntonneau: "powerTonneau",\npackages: "",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "extendedRange",\nsoftware: "",\n}\n\nconst threeJSON = {\nvehicle: \'Cyber Truck\',\ntrim : \'base\',\nexteriorColor: \'whiteExterior\',\nwheels: "21AllSeason",\ntonneau: "powerTonneau",\npackages: "",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "standardRange",\nsoftware: "",\n}\n\nconst fourJSON = {\nvehicle: \'Cyber Truck\',\ntrim : \'adventure\',\nexteriorColor: \'whiteExterior\',\nwheels: "20AllTerrain",\ntonneau: "powerTonneau",\npackages: "offroadPackage,matchingSpareTire",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "extendedRange",\nsoftware: "",\n}\n\nconst fiveJSON = {\nvehicle: \'Model X\',\ntrim : \'base\',\nexteriorColor: \'whiteExterior\',\nwheels: "20AllTerrain",\ntonneau: "manualTonneau",\npackages: "",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "standardRange",\nsoftware: "",\n}\n\nconst sixJSON = {\nvehicle: \'Cyber Truck\',\ntrim : \'adventure\',\nexteriorColor: \'whiteExterior\',\nwheels: "20AllTerrain",\ntonneau: "powerTonneau",\npackages: "offroadPackage,matchingSpareTire",\ninteriorAddons: "wirelessCharger",\ninteriorColor: "blackInterior",\nrange: "extendedRange",\nsoftware: "selfDrivingPackage",\n}\n\nconst sevenJSON = {\nvehicle: \'Model X\',\ntrim : \'base\',\nexteriorColor: \'whiteExterior\',\nwheels: "21AllSeason",\ntonneau: "powerTonneau",\npackages: "",\ninteriorAddons: "",\ninteriorColor: "blackInterior",\nrange: "mediumRange",\nsoftware: "",\n}\n'))),(0,i.kt)("li",{parentName:"ul"},"Vehicle model configurations",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},"const configuration = {\nmeta: {\nconfigurationId: '???',\nstoreId: 'US_SALES',\ncountry: 'US',\nversion: '1.0',\neffectiveDate: '???',\ncurrency: 'USD',\nlocale: 'en-US',\navailableLocales: ['en-US'],\n},\n\ndefaults: {\nbasePrice: 50000,\ndeposit: 1000,\ninitialSelection: [\n'adventure',\n'whiteExterior',\n'21AllSeason',\n'powerTonneau',\n'blackInterior',\n'mediumRange',\n],\n},\n\ngroups: {\ntrim: {\nname: { 'en-US': 'Choose trim' },\nmultiselect: false,\nrequired: true,\noptions: ['base', 'adventure'],\n},\nexteriorColor: {\nname: { 'en-US': 'Choose paint' },\nmultiselect: false,\nrequired: true,\noptions: [\n'whiteExterior',\n'blueExterior',\n'silverExterior',\n'greyExterior',\n'blackExterior',\n'redExterior',\n'greenExterior',\n],\n},\nwheels: {\nname: { 'en-US': 'Choose wheels' },\nmultiselect: false,\nrequired: true,\noptions: ['21AllSeason', '20AllTerrain', '22Performance'],\n},\ntonneau: {\nname: { 'en-US': 'Choose tonneau cover' },\nmultiselect: false,\nrequired: true,\noptions: ['manualTonneau', 'powerTonneau'],\n},\npackages: {\nname: { 'en-US': 'Choose upgrades' },\nmultiselect: true,\nrequired: false,\noptions: ['offroadPackage', 'matchingSpareTire'],\n},\ninteriorColor: {\nname: { 'en-US': 'Choose interior' },\nmultiselect: false,\nrequired: true,\noptions: ['greyInterior', 'blackInterior', 'greenInterior'],\n},\ninteriorAddons: {\nname: { 'en-US': 'Choose upgrade' },\nmultiselect: true,\nrequired: false,\noptions: ['wirelessCharger'],\n},\nrange: {\nname: { 'en-US': 'Choose range' },\nmultiselect: false,\nrequired: true,\noptions: ['standardRange', 'mediumRange', 'extendedRange'],\n},\nsoftware: {\nname: { 'en-US': 'Choose upgrade' },\nmultiselect: true,\nrequired: false,\noptions: ['selfDrivingPackage'],\n},\nspecs: {\nname: { 'en-US': 'Specs overview *' },\nattrs: {\ndescription: {\n'en-US':\n\"* Options, specs and pricing may change as we approach production. We'll contact you to review any updates to your preferred build.\",\n},\n},\nmultiselect: false,\nrequired: false,\noptions: ['acceleration', 'power', 'towing', 'range'],\n},\n},\n\noptions: {\nbase: {\nname: { 'en-US': 'Base' },\nattrs: {\ndescription: { 'en-US': 'Production begins 2022' },\n},\nvisual: true,\nprice: 0,\n},\nadventure: {\nname: { 'en-US': 'Adventure' },\nattrs: {\ndescription: { 'en-US': 'Production begins 2021' },\n},\nvisual: true,\nprice: 10000,\n},\n\nstandardRange: {\nname: { 'en-US': 'Standard' },\nattrs: {\ndescription: { 'en-US': '230+ miles' },\n},\nprice: 0,\n},\nmediumRange: {\nname: { 'en-US': 'Medium' },\nattrs: {\ndescription: { 'en-US': '300+ miles' },\n},\nprice: 3000,\n},\nextendedRange: {\nname: { 'en-US': 'Extended' },\nattrs: {\ndescription: { 'en-US': '400+ miles' },\n},\nprice: 8000,\n},\n\ngreenExterior: {\nname: { 'en-US': 'Adirondack Green' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/green.svg',\n},\nvisual: true,\nprice: 2000,\n},\nblueExterior: {\nname: { 'en-US': 'Trestles Blue' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/blue.svg',\n},\nvisual: true,\nprice: 1000,\n},\nwhiteExterior: {\nname: { 'en-US': 'Arctic White' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/white.svg',\n},\nvisual: true,\nprice: 0,\n},\nsilverExterior: {\nname: { 'en-US': 'Silver Gracier' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/silver.svg',\n},\nvisual: true,\nprice: 1000,\n},\nblackExterior: {\nname: { 'en-US': 'Cosmic Black' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/black.svg',\n},\nvisual: true,\nprice: 1000,\n},\nredExterior: {\nname: { 'en-US': 'Red Rocks' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/red.svg',\n},\nvisual: true,\nprice: 2000,\n},\ngreyExterior: {\nname: { 'en-US': 'Antracite Grey' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/exteriorcolors/grey.svg',\n},\nvisual: true,\nprice: 1000,\n},\n\n'21AllSeason': {\nname: { 'en-US': '21\" Cast Wheel - All Season' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/wheels/twentyone.svg',\n},\nvisual: true,\nprice: 0,\n},\n'20AllTerrain': {\nname: { 'en-US': '20\" Forged Wheel - All Terrain' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/wheels/twenty.svg',\n},\nvisual: true,\nprice: 0,\n},\n'22Performance': {\nname: { 'en-US': '22\" Cast Wheel - Performance' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/wheels/twentytwo.svg',\n},\nvisual: true,\nprice: 2000,\n},\n\nmanualTonneau: {\nname: { 'en-US': 'Manual' },\nattrs: {\ndescription: { 'en-US': 'Description here' },\n},\nprice: 0,\n},\npowerTonneau: {\nname: { 'en-US': 'Powered' },\nattrs: {\ndescription: { 'en-US': 'Description here' },\n},\nprice: 0,\n},\n\nblackInterior: {\nname: { 'en-US': 'Black' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/interiorcolors/black.svg',\n},\nvisual: true,\nprice: 0,\n},\ngreyInterior: {\nname: { 'en-US': 'Grey' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/interiorcolors/grey.svg',\n},\nvisual: true,\nprice: 1000,\n},\ngreenInterior: {\nname: { 'en-US': 'Green' },\nattrs: {\nimageUrl: '/public/images/configurationOptions/interiorcolors/green.svg',\n},\nvisual: true,\nprice: 2000,\n},\n\noffroadPackage: {\nname: { 'en-US': 'Off-Road' },\nattrs: {\ndescription: { 'en-US': 'Lorem ipsum dolor sit amet.' },\nimageUrl: '/public/images/configurationOptions/packages/offroad.png',\n},\nvisual: true,\nprice: 5000,\n},\nmatchingSpareTire: {\nname: { 'en-US': 'Matching Spare Tire' },\nattrs: {\ndescription: { 'en-US': 'Full sized tire' },\nimageUrl: '/public/images/configurationOptions/packages/spare.png',\n},\nprice: 500,\n},\n\nwirelessCharger: {\nname: { 'en-US': 'Wireless charger' },\nattrs: {\ndescription: { 'en-US': 'Lorem ipsum dolor sit amet.' },\nimageUrl: '/public/images/configurationOptions/packages/wireless.png',\n},\nprice: 100,\n},\nselfDrivingPackage: {\nname: { 'en-US': 'Autonomy' },\nattrs: {\ndescription: { 'en-US': 'Lorem ipsum dolor sit amet.' },\nimageUrl: '/public/images/configurationOptions/packages/autonomy.png',\n},\nprice: 7000,\n},\n\nacceleration: {\nname: { 'en-US': '0 - 60 mph' },\nattrs: {\nunits: { 'en-US': 'sec' },\ndecimals: 1,\n},\nvalue: 3.4,\n},\npower: {\nname: { 'en-US': 'Horsepower' },\nattrs: {\nunits: { 'en-US': 'hp' },\n},\nvalue: 750,\n},\ntowing: {\nname: { 'en-US': 'Towing' },\nattrs: {\nunits: { 'en-US': 'lbs' },\n},\nvalue: 10000,\n},\nrange: {\nname: { 'en-US': 'Range' },\nattrs: {\nunits: { 'en-US': 'mi' },\n},\nvalue: 400,\n},\n}\n};\n")))),(0,i.kt)("h2",{id:"public-datasets"},"Public datasets"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Instagram: 16539 images from 972 Instagram influencers (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/gvsi/instagram-like-predictor"},"link"),")"),(0,i.kt)("li",{parentName:"ul"},"TechCrunchPosts: (",(0,i.kt)("a",{parentName:"li",href:"https://www.kaggle.com/thibalbo/techcrunch-posts-compilation"},"link"),")"),(0,i.kt)("li",{parentName:"ul"},"Tweets: (",(0,i.kt)("a",{parentName:"li",href:"https://data.world/data-society/twitter-user-data"},"link"),")")),(0,i.kt)("p",null,"Primary (available for academic use only, need university affiliation for access)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2006.08335"},"A Dataset and Benchmarks for Multimedia Social Analysis"))),(0,i.kt)("p",null,"Secondary (low quality data, not sure if can be used at all)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.kaggle.com/hacker-news/hacker-news-posts"},"Hacker News Posts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.kaggle.com/thibalbo/techcrunch-posts-compilation"},"TechCrunch Posts Compilation")),(0,i.kt)("li",{parentName:"ul"},"Instagram image data ",(0,i.kt)("a",{parentName:"li",href:"https://towardsdatascience.com/predict-the-number-of-likes-on-instagram-a7ec5c020203"},"HowTo")),(0,i.kt)("li",{parentName:"ul"},"Flikr Large with likes and comments"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://chenlab.ece.cornell.edu/people/Andy/ImagesOfGroups.html"},"The Images of Groups Dataset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.multimediaeval.org/datasets/"},"http://www.multimediaeval.org/datasets/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gombru.github.io/2018/08/01/InstaCities1M/"},"The InstaCities1M Dataset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.insight-centre.org/sites/default/files/publications/memes_classification_lrec_1.pdf"},"Multimodal Meme Classification: Identifying Offensive Content in Image and Text")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/NRPHLC"},"Understanding Police Social Media Usage Through Posts and Tweets")),(0,i.kt)("li",{parentName:"ul"},"Topic clusters text",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Model X",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like model X"),(0,i.kt)("li",{parentName:"ul"},"I want to buy model X"),(0,i.kt)("li",{parentName:"ul"},"Model X is my favorite car"),(0,i.kt)("li",{parentName:"ul"},"Tesla Modelx is my dream"),(0,i.kt)("li",{parentName:"ul"},"modelx tesla love"))),(0,i.kt)("li",{parentName:"ul"},"Cyber Truck",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Cyber Truck"),(0,i.kt)("li",{parentName:"ul"},"I want to buy Cyber Truck"),(0,i.kt)("li",{parentName:"ul"},"Cyber Truck is my favorite car"),(0,i.kt)("li",{parentName:"ul"},"Tesla Cyber Truck is my dream"),(0,i.kt)("li",{parentName:"ul"},"CyberTruck tesla love"))),(0,i.kt)("li",{parentName:"ul"},"Adventure",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like adventure"),(0,i.kt)("li",{parentName:"ul"},"sports i play"),(0,i.kt)("li",{parentName:"ul"},"i went on trip"),(0,i.kt)("li",{parentName:"ul"},"I travels a lot"),(0,i.kt)("li",{parentName:"ul"},"car adventure"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color White",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like white color"),(0,i.kt)("li",{parentName:"ul"},"White is my fav"),(0,i.kt)("li",{parentName:"ul"},"white car love"),(0,i.kt)("li",{parentName:"ul"},"I like white exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Black",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Black color"),(0,i.kt)("li",{parentName:"ul"},"Black is my fav"),(0,i.kt)("li",{parentName:"ul"},"Black car love"),(0,i.kt)("li",{parentName:"ul"},"I like Black exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Blue",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Blue color"),(0,i.kt)("li",{parentName:"ul"},"Blue is my fav"),(0,i.kt)("li",{parentName:"ul"},"Blue car love"),(0,i.kt)("li",{parentName:"ul"},"I like Blue exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Green",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Green color"),(0,i.kt)("li",{parentName:"ul"},"Green is my fav"),(0,i.kt)("li",{parentName:"ul"},"Green car love"),(0,i.kt)("li",{parentName:"ul"},"I like Green exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Red",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Red color"),(0,i.kt)("li",{parentName:"ul"},"Red is my fav"),(0,i.kt)("li",{parentName:"ul"},"Red car love"),(0,i.kt)("li",{parentName:"ul"},"I like Red exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Grey",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Grey color"),(0,i.kt)("li",{parentName:"ul"},"Grey is my fav"),(0,i.kt)("li",{parentName:"ul"},"Grey car love"),(0,i.kt)("li",{parentName:"ul"},"I like Grey exterior"))),(0,i.kt)("li",{parentName:"ul"},"Exterior Color Silver",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like Silver color"),(0,i.kt)("li",{parentName:"ul"},"Silver is my fav"),(0,i.kt)("li",{parentName:"ul"},"Silver car love"),(0,i.kt)("li",{parentName:"ul"},"I like Silver exterior"))),(0,i.kt)("li",{parentName:"ul"},"Self driving",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"I like self driving technology"),(0,i.kt)("li",{parentName:"ul"},"selfDrivingPackage"),(0,i.kt)("li",{parentName:"ul"},"selfDrivingtech love"),(0,i.kt)("li",{parentName:"ul"},"self drive is my fav"),(0,i.kt)("li",{parentName:"ul"},"self driving car is amazing"))))),(0,i.kt)("li",{parentName:"ul"},"Celebs","  ",(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-1.png",src:t(33587).Z,width:"493",height:"203"}))),(0,i.kt)("h2",{id:"logical-reasoning"},"Logical Reasoning"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If I implicitly rate pictures of blue car, that means I might prefer a blue car."),(0,i.kt)("li",{parentName:"ul"},"If I like posts of self-driving, that means I might prefer a self-driving option.")),(0,i.kt)("h1",{id:"scope"},"Scope"),(0,i.kt)("h3",{id:"scope-1"},"Scope 1"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-2.png",src:t(84675).Z,width:"949",height:"543"})),(0,i.kt)("h3",{id:"scope-2"},"Scope 2"),(0,i.kt)("p",null,"media content categories: text and images"),(0,i.kt)("p",null,"platforms: facebook, twitter and instagram"),(0,i.kt)("p",null,"implicit rating categories: like, comment, share"),(0,i.kt)("p",null,"columns: userid, timestamp, platform, type, content, rating"),(0,i.kt)("h1",{id:"model-framework"},"Model Framework"),(0,i.kt)("h3",{id:"model-framework-1"},"Model framework 1"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Convert user's natural language query into vector using Universal Sentence Embedding model"),(0,i.kt)("li",{parentName:"ol"},"Create a product specs binary matrix based on different categories"),(0,i.kt)("li",{parentName:"ol"},"Find TopK similar query vectors using cosine distance"),(0,i.kt)("li",{parentName:"ol"},"For each TopK vector, Find TopM product specs using interaction table weights"),(0,i.kt)("li",{parentName:"ol"},"For each TopM specification, find TopN similar specs using binary matrix"),(0,i.kt)("li",{parentName:"ol"},"Show all the qualified product specifications")),(0,i.kt)("h3",{id:"model-framework-2"},"Model framework 2"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Seed data: 10 users with ground-truth persona, media content and implicit ratings"),(0,i.kt)("li",{parentName:"ol"},"Inflated data: 10 users with media content and implicit ratings"),(0,i.kt)("li",{parentName:"ol"},"media content \u2192 Implicit rating (A)"),(0,i.kt)("li",{parentName:"ol"},"media content \u2192 feature vector (B) + (A) \u2192 weighted pooling \u2192 similar users (C)"),(0,i.kt)("li",{parentName:"ol"},"media content \u2192 QA model \u2192 slot filling \u2192 global pooling \u2192 item associations (D)"),(0,i.kt)("li",{parentName:"ol"},"(C) \u2192 content-based filtering \u2192 item recommendations \u2192 (D) \u2192 top-k recommendations")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"User selection")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"People who are connected to social media community of electric vehicles"),(0,i.kt)("li",{parentName:"ul"},"Seed users are those who already have an electric vehicle"),(0,i.kt)("li",{parentName:"ul"},"Inflated users are those who doesn't own an EV but inclined to purchase"),(0,i.kt)("li",{parentName:"ul"},"Users having presense on all three sites or at least 2"),(0,i.kt)("li",{parentName:"ul"},"List of common users","  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/gossman"},"https://www.facebook.com/gossman"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/ryanm06"},"https://www.facebook.com/ryanm06"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/chad.turner.7146"},"https://www.facebook.com/chad.turner.7146"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/cjacobs05"},"https://www.facebook.com/cjacobs05"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/MafiaAllen"},"https://www.facebook.com/MafiaAllen"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/rahul.mii.33"},"https://www.facebook.com/rahul.mii.33"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/francisco.chavira.547"},"https://www.facebook.com/francisco.chavira.547"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/JayTheillest74"},"https://www.facebook.com/JayTheillest74"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/michael.creighton20"},"https://www.facebook.com/michael.creighton20"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/darryl.grigggardening"},"https://www.facebook.com/darryl.grigggardening"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.facebook.com/4X4Aus/"},"https://www.facebook.com/4X4Aus/"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.instagram.com/minnyrc/"},"https://www.instagram.com/minnyrc/"),"  ",(0,i.kt)("a",{parentName:"li",href:"https://www.instagram.com/warnerbu7lt/"},"https://www.instagram.com/warnerbu7lt/")),(0,i.kt)("li",{parentName:"ul"},"List of celebs",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_most-followed_Instagram_accounts"},"https://en.wikipedia.org/wiki/List_of_most-followed_Instagram_accounts"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_most-followed_Twitter_accounts"},"https://en.wikipedia.org/wiki/List_of_most-followed_Twitter_accounts"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_most-followed_Facebook_pages"},"https://en.wikipedia.org/wiki/List_of_most-followed_Facebook_pages")),(0,i.kt)("p",{parentName:"li"},"['Jennifer Lopez', 'Virat Kohli', 'Ariana Grande', 'Dwayne Johnson', 'Kylie Jenner', 'Lionel Messi', 'LeBron James', 'Beyonc\xe9', 'Justin Bieber', 'Akshay Kumar', 'Demi Lovato', 'Kendall Jenner', 'Nicki Minaj', 'Khlo\xe9 Kardashian', 'Kim Kardashian', 'Gigi Hadid', 'Ellen DeGeneres', 'Deepika Padukone', 'Rihanna', 'Shakira', 'Cardi B', 'Eminem', 'Drake', 'Chris Brown', 'Maluma', 'Vin Diesel', 'Ronaldinho', 'Kevin Hart', 'Emma Watson', 'Shawn Mendes', 'Neymar', 'Justin Timberlake', 'Katy Perry', 'Donald Trump', 'Lady Gaga', 'Amitabh Bachchan', 'Selena Gomez', 'Lil Wayne', 'Elon Musk', 'Britney Spears', 'Jimmy Fallon', 'Bill Gates', 'Ariana Grande', 'Miley Cyrus', 'Oprah Winfrey', 'Cristiano Ronaldo', 'Salman Khan', 'Shah Rukh Khan', 'Niall Horan']"))))),(0,i.kt)("h3",{id:"model-framework-3"},"Model framework 3"),(0,i.kt)("p",null,"User-User Similarity (clustering)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User \u2192 Media content \u2192 Embedding \u2192 Average pooling"),(0,i.kt)("li",{parentName:"ul"},"Cosine Similarity of user's social vector with other user's social vector")),(0,i.kt)("p",null,"User-Item Similarity (reranking)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"User \u2192 Implicit Rating on media content M \u2192 M's correlation with item features")),(0,i.kt)("li",{parentName:"ul"},"Item features: familySize"),(0,i.kt)("li",{parentName:"ul"},"Cosine Similarity of user's social vector with item's feature vector")),(0,i.kt)("p",null,"User-User Similarity (clustering)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User \u2192 Media content \u2192 Embedding \u2192 Average pooling"),(0,i.kt)("li",{parentName:"ul"},"Cosine Similarity of user's social vector with other user's social vector")),(0,i.kt)("p",null,"User-Item Similarity (reranking)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"User \u2192 Implicit Rating on media content M \u2192 M's correlation with item features")),(0,i.kt)("li",{parentName:"ul"},"Item features: familySize"),(0,i.kt)("li",{parentName:"ul"},"Cosine Similarity of user's social vector with item's feature vector")),(0,i.kt)("h3",{id:"model-framework-4"},"Model framework 4"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-3.png",src:t(15020).Z,width:"929",height:"526"})),(0,i.kt)("p",null,"Text \u2192 Prepare \u2192 Vectorize \u2192 Average \u2192 Similar Users"),(0,i.kt)("p",null,"Image \u2192 Prepare \u2192 Vectorize \u2192 Average \u2192 Similar Users"),(0,i.kt)("p",null,"Text \u2192 Prepare \u2192 QA \u2192 Slot filling"),(0,i.kt)("p",null,"Image \u2192 Prepare \u2192 VQA \u2192 Slot filling"),(0,i.kt)("p",null,"Image \u2192 Similar Image from users \u2192 Detailed enquiry"),(0,i.kt)("h3",{id:"model-framework-5"},"Model framework 5"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Topic Clusters Text"),(0,i.kt)("li",{parentName:"ol"},"Topic Clusters Image"),(0,i.kt)("li",{parentName:"ol"},"Fetch raw text and images"),(0,i.kt)("li",{parentName:"ol"},"Combine, Clean and Store text in text dataframe"),(0,i.kt)("li",{parentName:"ol"},"Vectorize Texts"),(0,i.kt)("li",{parentName:"ol"},"Cosine similarities of texts with topic clusters"),(0,i.kt)("li",{parentName:"ol"},"Vectorize Images"),(0,i.kt)("li",{parentName:"ol"},"Cosine similarities of images with topic clusters")),(0,i.kt)("h1",{id:"experimental-setup"},"Experimental Setup"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Experiment 1",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nimport pandas as pd\nimport tensorflow_hub as hub\nfrom itertools import product\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.metrics.pairwise import cosine_similarity\n\nvehicle = ['modelX', 'cyberTruck']\ntrim = ['adventure', 'base']\nexteriorColor = ['whiteExterior', 'blueExterior', 'silverExterior', 'greyExterior', 'blackExterior', 'redExterior', 'greenExterior']\nwheels = ['20AllTerrain', '21AllSeason', '22Performance']\ntonneau = ['powerTonneau', 'manualTonneau']\ninteriorColor = ['blackInterior', 'greyInterior', 'greenInterior']\nrange = ['standardRange', 'mediumRange', 'extendedRange']\npackages = ['offroadPackage', 'matchingSpareTire', 'offroadPackage,matchingSpareTire', 'None']\ninteriorAddons = ['wirelessCharger', 'None']\nsoftware = ['selfDrivingPackage', 'None']\n\nspecs_cols = ['vehicle', 'trim', 'exteriorColor', 'wheels', 'tonneau', 'interiorColor', 'range', 'packages', 'interiorAddons', 'software']\nspecs = pd.DataFrame(list(product(vehicle, trim, exteriorColor, wheels, tonneau, interiorColor, range, packages, interiorAddons, software)),\n                     columns=specs_cols)\n\nenc = OneHotEncoder(handle_unknown='error', sparse=False)\nspecs = pd.DataFrame(enc.fit_transform(specs))\n\nspecs_ids = specs.index.tolist()\n\nquery_list = [\"I'm looking for a fast suv that I can go camping without worrying about recharging\",\n              \"cheap red car that is able to go long distances\",\n              \"i am looking for a daily driver that i can charge everyday, do not need any extras\",\n              \"i like to go offroading a lot on my jeep and i want to do the same with the truck\",\n              \"i want the most basic suv possible\",\n              \"I want all of the addons\", \n              \"I have a big family and want to be able to take them around town and run errands without worrying about charging\"]\n\nqueries = pd.DataFrame(query_list, columns=['query'])\nquery_ids = queries.index.tolist()\n\nconst_oneJSON = {\n'vehicle': 'modelX',\n'trim' : 'adventure',\n'exteriorColor': 'whiteExterior',\n'wheels': \"22Performance\",\n'tonneau': \"powerTonneau\",\n'packages': \"None\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"extendedRange\",\n'software': \"None\",\n}\n\nconst_twoJSON = {\n'vehicle': 'cyberTruck',\n'trim' : 'base',\n'exteriorColor': 'whiteExterior',\n'wheels': \"21AllSeason\",\n'tonneau': \"powerTonneau\",\n'packages': \"None\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"extendedRange\",\n'software': \"None\",\n}\n\nconst_threeJSON = {\n'vehicle': 'cyberTruck',\n'trim' : 'base',\n'exteriorColor': 'whiteExterior',\n'wheels': \"21AllSeason\",\n'tonneau': \"powerTonneau\",\n'packages': \"None\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"standardRange\",\n'software': \"None\",\n}\n\nconst_fourJSON = {\n'vehicle': 'cyberTruck',\n'trim' : 'adventure',\n'exteriorColor': 'whiteExterior',\n'wheels': \"20AllTerrain\",\n'tonneau': \"powerTonneau\",\n'packages': \"offroadPackage,matchingSpareTire\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"extendedRange\",\n'software': \"None\",\n}\n\nconst_fiveJSON = {\n'vehicle': 'modelX',\n'trim' : 'base',\n'exteriorColor': 'whiteExterior',\n'wheels': \"20AllTerrain\",\n'tonneau': \"manualTonneau\",\n'packages': \"None\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"standardRange\",\n'software': \"None\",\n}\n\nconst_sixJSON = {\n'vehicle': 'cyberTruck',\n'trim' : 'adventure',\n'exteriorColor': 'whiteExterior',\n'wheels': \"20AllTerrain\",\n'tonneau': \"powerTonneau\",\n'packages': \"offroadPackage,matchingSpareTire\",\n'interiorAddons': \"wirelessCharger\",\n'interiorColor': \"blackInterior\",\n'range': \"extendedRange\",\n'software': \"selfDrivingPackage\",\n}\n\nconst_sevenJSON = {\n'vehicle': 'modelX',\n'trim' : 'base',\n'exteriorColor': 'whiteExterior',\n'wheels': \"21AllSeason\",\n'tonneau': \"powerTonneau\",\n'packages': \"None\",\n'interiorAddons': \"None\",\n'interiorColor': \"blackInterior\",\n'range': \"mediumRange\",\n'software': \"None\",\n}\n\nhistorical_data = pd.DataFrame([const_oneJSON, const_twoJSON, const_threeJSON, const_fourJSON, const_fiveJSON, const_sixJSON, const_sevenJSON])\n\ninput_vec = enc.transform([specs_frame.append(historical_data.iloc[0], sort=False).iloc[-1]])\nidx = np.argsort(-cosine_similarity(input_vec, specs.values))[0,:][:1]\nrslt = enc.inverse_transform([specs.iloc[idx]])\n\ninteractions = pd.DataFrame(columns=['query_id','specs_id'])\ninteractions['query_id'] = queries.index.tolist()\ninput_vecs = enc.transform(specs_frame.append(historical_data, sort=False).iloc[-len(historical_data):])\ninteractions['specs_id'] = np.argsort(-cosine_similarity(input_vecs, specs.values))[:,0]\n\nmodule_url = \"https://tfhub.dev/google/universal-sentence-encoder/4\" \nembed_model = hub.load(module_url)\ndef embed(input):\n  return embed_model(input)\nquery_vecs = embed(queries['query'].tolist()).numpy()\n\n_query = input('Please enter query: ') or 'i want the most basic suv possible'\n_query_vec = embed([_query]).numpy()\n_match_qid = np.argsort(-cosine_similarity(_query_vec, query_vecs))[0,:][:1]\n_match_sid = interactions.loc[interactions['query_id']==_match_qid[0], 'specs_id'].values[0]\ninput_vec = enc.transform([specs_frame.append(historical_data.iloc[0], sort=False).iloc[-1]])\nidx = np.argsort(-cosine_similarity([specs.iloc[_match_sid].values], specs.values))[0,:][:5]\nresults = []\nfor x in idx:\n  results.append(enc.inverse_transform([specs.iloc[x]]))\n_temp = np.array(results).reshape(5,-1)\n_temp = pd.DataFrame(_temp, columns=specs_frame.columns)\nprint(_temp)\n")))),(0,i.kt)("h2",{id:"experiment-2"},"Experiment 2"),(0,i.kt)("p",null,"Celeb Scraping"),(0,i.kt)("h3",{id:"facebook-scraping"},"Facebook Scraping"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-4.png",src:t(27278).Z,width:"384",height:"370"})),(0,i.kt)("h3",{id:"twitter-scraping"},"Twitter Scraping"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-5.png",src:t(55151).Z,width:"447",height:"383"})),(0,i.kt)("h3",{id:"dataframe"},"Dataframe"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-6.png",src:t(89774).Z,width:"1257",height:"546"})),(0,i.kt)("h3",{id:"insta-image-grid"},"Insta Image Grid"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-7.png",src:t(48266).Z,width:"3035",height:"927"})),(0,i.kt)("h3",{id:"user-text-ner"},"User Text NER"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-8.png",src:t(30329).Z,width:"1235",height:"531"})),(0,i.kt)("h2",{id:"experiment-3"},"Experiment 3"),(0,i.kt)("p",null,"Topic model"),(0,i.kt)("h3",{id:"topic-scores"},"Topic scores"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-9.png",src:t(63183).Z,width:"1262",height:"290"})),(0,i.kt)("h3",{id:"json-rules"},"JSON rules"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"/img/content-blog-raw-blog-vehicle-suggestions-untitled-10.png",src:t(59264).Z,width:"1260",height:"205"})),(0,i.kt)("h1",{id:"results-and-discussion"},"Results and Discussion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"API with 3 input fields - Facebook username, Twitter handle & Instagram username"),(0,i.kt)("li",{parentName:"ul"},"The system will automatically scrap the user's publicly available text and images from these 3 social media platforms and provide a list of recommendations from most to least preferred product")))}g.isMDXComponent=!0},33587:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-1-95c3ca98fc2cd6d97ba662496512d916.png"},59264:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-10-e49a898c72bbc1d31740f5f226368571.png"},84675:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-2-aa84d1984e650b4f5c035cdca964394e.png"},15020:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-3-c4ff3463ce229a04be3711878326b0e2.png"},27278:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-4-571b3c3b971bc9a66df1d6fc46e3dc99.png"},55151:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-5-c2bb8469a34000ca359137118ba4d171.png"},89774:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-6-c2af6fa4568e5eb3d48aa54f04b58215.png"},48266:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-7-e4526d477afc3e390cdbf9e3a1a2d740.png"},30329:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-8-db9c03892f420f73669b4957f6a97be7.png"},63183:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-9-620359fc32943478e2972f6478f3cede.png"},94342:function(e,n,t){n.Z=t.p+"assets/images/content-blog-raw-blog-vehicle-suggestions-untitled-97d521322a8066bfd9b24db2d0ae2097.png"}}]);