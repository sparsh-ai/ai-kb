"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4120],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),f=r,m=p["".concat(s,".").concat(f)]||p[f]||u[f]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},28525:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={},s="Data Loading",d={unversionedId:"tutorials/data-loading",id:"tutorials/data-loading",title:"Data Loading",description:"Load text files into pandas dataframe",source:"@site/docs/04-tutorials/data-loading.md",sourceDirName:"04-tutorials",slug:"/tutorials/data-loading",permalink:"/ai-kb/docs/tutorials/data-loading",editUrl:"https://github.com/sparsh-ai/ai-kb/docs/04-tutorials/data-loading.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Amazon Personalize",permalink:"/ai-kb/docs/tutorials/amazon-personalize"},next:{title:"Database Connections",permalink:"/ai-kb/docs/tutorials/database-conn"}},c={},u=[{value:"Load text files into pandas dataframe",id:"load-text-files-into-pandas-dataframe",level:2},{value:"Custom seperator",id:"custom-seperator",level:3}],p={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-loading"},"Data Loading"),(0,o.kt)("h2",{id:"load-text-files-into-pandas-dataframe"},"Load text files into pandas dataframe"),(0,o.kt)("h3",{id:"custom-seperator"},"Custom seperator"),(0,o.kt)("p",null,"Let's assume we have a ",(0,o.kt)("inlineCode",{parentName:"p"},".txt")," file of emails. Each email is seperated by 50 ",(0,o.kt)("inlineCode",{parentName:"p"},"-")," symbols (dashed line). So we can use the below code to load this kind of data into pandas dataframe."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"def load_data(file_path):\n    my_file = open(file_path, 'r')\n    data = my_file.read()\n    data_into_list = data.split(\"-\"*50)\n    my_file.close()\n    df = pd.DataFrame({'text': data_into_list}).replace('', np.nan).dropna()\n    df.reset_index(drop=True, inplace=True)\n    return df\n")))}f.isMDXComponent=!0}}]);